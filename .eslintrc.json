{
    "root": true,
    "ignorePatterns": ["projects/**/*"],
    "overrides": [
        {
            "files": ["*.ts"],
            "parserOptions": {
                "project": ["tsconfig.json"],
                "createDefaultProgram": true
            },
            "extends": [
                "eslint:recommended",
                "plugin:@typescript-eslint/recommended",
                "plugin:@typescript-eslint/strict",
                "plugin:@angular-eslint/base",
                "plugin:@angular-eslint/recommended--extra",
                "plugin:@angular-eslint/template/process-inline-templates",
                "plugin:regexp/recommended",
                "prettier"
            ],
            "plugins": ["deprecation", "import", "rxjs", "simple-import-sort", "unused-imports"],
            "rules": {
                // ==== deprecation ====
                "deprecation/deprecation": "warn",

                // ==== imports ====
                "import/first": "warn",
                "import/newline-after-import": "warn",
                "import/no-duplicates": "warn",
                "simple-import-sort/imports": "warn",
                "simple-import-sort/exports": "warn",
                "unused-imports/no-unused-imports": "warn",

                // ==== regexp ====
                "regexp/no-unused-capturing-group": "off", // recommended override: avoid unnecessary changes
                "regexp/sort-character-class-elements": "warn",

                // ==== rxjs ====
                "rxjs/no-async-subscribe": "warn",
                "rxjs/no-create": "warn",
                "rxjs/no-ignored-replay-buffer": "warn",
                "rxjs/no-ignored-takewhile-value": "warn",
                "rxjs/no-index": "warn",
                "rxjs/no-internal": "warn",
                "rxjs/no-nested-subscribe": "warn",
                "rxjs/no-redundant-notify": "warn",
                "rxjs/no-sharereplay": ["warn", { "allowConfig": true }],
                "rxjs/no-subject-unsubscribe": "warn",
                "rxjs/no-unbound-methods": "warn",
                "rxjs/no-unsafe-takeuntil": "warn",

                // ==== eslint: possible problems ====
                "no-self-compare": "warn",
                "no-unreachable-loop": "warn",
                "no-unused-private-class-members": "warn",

                // ==== eslint: suggestions ====
                "arrow-body-style": "warn",
                "curly": "warn",
                "default-case-last": "warn",
                "eqeqeq": ["warn", "always", { "null": "ignore" }],
                "func-style": ["warn", "declaration", { "allowArrowFunctions": true }],
                "grouped-accessor-pairs": ["warn", "setBeforeGet"],
                "guard-for-in": "warn",
                "no-bitwise": "warn",
                "no-caller": "warn",
                "no-console": ["warn", { "allow": ["warn", "error"] }], // TODO check with others
                "no-else-return": "warn",
                "no-empty": ["warn", { "allowEmptyCatch": true }], // recommended override: allow empty catch block
                "no-eval": "warn",
                "no-extend-native": "warn",
                "no-extra-bind": "warn",
                "no-extra-label": "warn",
                "no-iterator": "warn",
                "no-lone-blocks": "warn",
                "no-lonely-if": "warn",
                "no-new-func": "warn",
                "no-new-object": "warn",
                "no-new-wrappers": "warn",
                "no-octal-escape": "warn",
                "no-proto": "warn",
                "no-script-url": "warn",
                "no-undef-init": "warn",
                "no-unneeded-ternary": "warn",
                "no-useless-computed-key": ["warn", { "enforceForClassMembers": true }],
                "no-useless-concat": "warn",
                "no-useless-rename": "warn",
                "no-useless-return": "warn",
                "no-warning-comments": ["warn", { "terms": ["todo"] }],
                "object-shorthand": ["warn", "always", { "avoidQuotes": true }],
                "operator-assignment": "warn",
                "prefer-arrow-callback": ["warn", { "allowUnboundThis": false }],
                "prefer-const": ["warn", { "destructuring": "all" }], // recommended override: loosen destructuring sensitivity to avoid workarounds
                "prefer-exponentiation-operator": "warn",
                "prefer-numeric-literals": "warn",
                "prefer-object-spread": "warn",
                "radix": "warn",
                "require-unicode-regexp": "off", // TODO check with others
                "spaced-comment": ["warn", "always", { "markers": ["/"], "exceptions": ["*"] }],
                "yoda": ["warn", "never", { "exceptRange": true }],

                // ==== @typescript-eslint: supported rules ====
                "@typescript-eslint/consistent-indexed-object-style": ["warn", "index-signature"], // strict override: use index-signature instead of record type
                "@typescript-eslint/explicit-function-return-type": "off", // TODO enable eventually
                "@typescript-eslint/explicit-member-accessibility": ["warn", { "accessibility": "no-public" }],
                "@typescript-eslint/explicit-module-boundary-types": "off", // TODO enable eventually
                "@typescript-eslint/method-signature-style": ["warn", "method"],
                "@typescript-eslint/no-empty-interface": "off", // recommended overide: useful with certain libraries
                "@typescript-eslint/no-explicit-any": "off", // recommended override: used frequently
                "@typescript-eslint/no-extraneous-class": "off", // strict override: support annotated empty classes
                "@typescript-eslint/no-non-null-assertion": "off", // recommended override: used frequently
                "@typescript-eslint/no-useless-constructor": "off", // strict override: might be required for angular dependency injection
                "@typescript-eslint/prefer-nullish-coalescing": "off", // strict override: may cause false positives with strings and numbers
                "@typescript-eslint/parameter-properties": [
                    "warn",
                    { "prefer": "parameter-property", "allow": ["readonly", "protected readonly", "private readonly"] }
                ],
                "@typescript-eslint/prefer-readonly": "warn",

                // ==== @typescript-eslint: extension rules ====
                "no-empty-function": "off",
                "@typescript-eslint/no-empty-function": "off", // recommended override: used frequently
                "no-invalid-this": "off",
                "@typescript-eslint/no-invalid-this": "warn",
                "no-shadow": "off",
                "@typescript-eslint/no-shadow": "warn",
                "no-unused-vars": "off",
                "@typescript-eslint/no-unused-vars": ["warn", { "args": "none", "varsIgnorePattern": "^_+$" }], // recommended override: provide special options
                "no-return-await": "off",
                "@typescript-eslint/return-await": "warn",

                // ==== @angular-eslint: typescript ====
                "@angular-eslint/contextual-lifecycle": "warn",
                "@angular-eslint/no-conflicting-lifecycle": "warn",
                "@angular-eslint/no-empty-lifecycle-method": "warn",
                "@angular-eslint/no-output-native": "warn",
                "@angular-eslint/no-output-on-prefix": "warn",
                "@angular-eslint/use-lifecycle-interface": "warn",
                "@angular-eslint/use-pipe-transform-interface": "warn"
            }
        },
        {
            "files": ["*.html"],
            "extends": ["plugin:@angular-eslint/template/recommended"],
            "rules": {
                // ==== @angular-eslint: template ====
                "@angular-eslint/template/accessibility-alt-text": "warn",
                "@angular-eslint/template/accessibility-elements-content": "warn",
                "@angular-eslint/template/accessibility-label-has-associated-control": "warn",
                "@angular-eslint/template/accessibility-table-scope": "warn",
                "@angular-eslint/template/accessibility-valid-aria": "warn",
                "@angular-eslint/template/click-events-have-key-events": "warn",
                "@angular-eslint/template/eqeqeq": ["warn", { "allowNullOrUndefined": true }],
                "@angular-eslint/template/mouse-events-have-key-events": "warn",
                "@angular-eslint/template/no-any": "warn",
                "@angular-eslint/template/no-autofocus": "warn",
                "@angular-eslint/template/no-distracting-elements": "warn",
                "@angular-eslint/template/no-duplicate-attributes": "warn",
                "@angular-eslint/template/no-positive-tabindex": "warn"
            }
        }
    ]
}
